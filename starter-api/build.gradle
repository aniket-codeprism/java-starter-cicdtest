plugins{
    id 'com.google.protobuf' version '0.8.13'
}

//apply plugin: 'maven'
apply plugin: 'maven-publish'

scmVersion {
    tag {
        prefix = 'api-'
    }
}
project.version = scmVersion.version
protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.12.0:osx-x86_64'
    }

    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
        }
    }

    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}

task generatePB {
    doLast{
        def sOutCopy = new StringBuilder(), sErrCopy = new StringBuilder()
        def copyCommon = "cp -f -R ./build/extracted-protos/main/common ./src/main/proto/".execute()
        copyCommon.consumeProcessOutput(sOutCopy, sErrCopy)
        copyCommon.waitForOrKill(2000)
        println "outCopy> $sOutCopy\nerr> $sErrCopy"
        println("Generating out.pb using below command ðŸ‘‡")
        println("protoc --include_imports --include_source_info ./src/main/proto/starter.proto -I./src/main/proto/ --descriptor_set_out ../out.pb")
        def sOut = new StringBuilder(), sErr = new StringBuilder()
        def proc = "protoc --include_imports --include_source_info ./src/main/proto/starter.proto -I./src/main/proto/ --descriptor_set_out ../out.pb".execute()
        proc.consumeProcessOutput(sOut, sErr)
        proc.waitForOrKill(1000)
        println "out> $sOut\nerr> $sErr"
        "rm -rf ./src/main/proto/common".execute()
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}

dependencies {
    implementation "io.grpc:grpc-stub:${grpcVersion}"
    implementation "io.grpc:grpc-protobuf:${grpcVersion}"
    implementation group: 'javax.annotation', name: 'javax.annotation-api', version: '1.3.2'
    testImplementation "junit:junit:${junitVersion}"
}